import os
import environ
from datetime import timedelta

# Needs a noqa comment to come after the above import
from cove import settings  # noqa: E408

from requests_cache import FileCache, CachedSession

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

env = environ.Env(  # set default values and casting
    DB_NAME=(str, os.path.join(BASE_DIR, 'db.sqlite3')),
    SENTRY_DSN=(str, ''),
    REQUESTS_CACHE_DIR=(str, os.path.join(BASE_DIR, 'requests_cache_dir'))
)

# We use the setting to choose whether to show the section about Sentry in the
# terms and conditions
SENTRY_DSN = env('SENTRY_DSN')

if SENTRY_DSN:
    import sentry_sdk
    from sentry_sdk.integrations.django import DjangoIntegration
    from sentry_sdk.integrations.logging import ignore_logger

    ignore_logger('django.security.DisallowedHost')
    sentry_sdk.init(
        dsn=env('SENTRY_DSN'),
        integrations=[DjangoIntegration()]
    )

DEALER_TYPE = 'git'

PIWIK = settings.PIWIK
GOOGLE_ANALYTICS_ID = settings.GOOGLE_ANALYTICS_ID

# We can't take MEDIA_ROOT and MEDIA_URL from cove settings,
# ... otherwise the files appear under the BASE_DIR that is the Cove library install.
# That could get messy. We want them to appear in our directory.
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
MEDIA_URL = '/media/'

SECRET_KEY = settings.SECRET_KEY
DEBUG = settings.DEBUG
ALLOWED_HOSTS = settings.ALLOWED_HOSTS
MIDDLEWARE = settings.MIDDLEWARE
MIDDLEWARE += ('dealer.contrib.django.Middleware',)
ROOT_URLCONF = settings.ROOT_URLCONF
TEMPLATES = settings.TEMPLATES
WSGI_APPLICATION = settings.WSGI_APPLICATION

# We can't take DATABASES from cove settings,
# ... otherwise the files appear under the BASE_DIR that is the Cove library install.
# That could get messy. We want them to appear in our directory.
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': env('DB_NAME'),
    }
}

LANGUAGE_CODE = settings.LANGUAGE_CODE
TIME_ZONE = settings.TIME_ZONE
USE_I18N = settings.USE_I18N
USE_L10N = settings.USE_L10N
USE_TZ = settings.USE_TZ

# We can't take STATIC_URL and STATIC_ROOT from cove settings,
# ... otherwise the files appear under the BASE_DIR that is the Cove library install.
# and that doesn't work with our standard Apache setup.
STATIC_URL = '/static/'
STATIC_ROOT = os.path.join(BASE_DIR, 'static')

LANGUAGES = settings.LANGUAGES
LOCALE_PATHS = settings.LOCALE_PATHS
LOCALE_PATHS += os.path.join(BASE_DIR, 'cove_iati', 'locale'),
LOGGING = settings.LOGGING

if getattr(settings, 'RAVEN_CONFIG', None):
    RAVEN_CONFIG = settings.RAVEN_CONFIG

INSTALLED_APPS = settings.INSTALLED_APPS + ('cove_iati', )
WSGI_APPLICATION = 'cove_iati.wsgi.application'
ROOT_URLCONF = 'cove_iati.urls'
COVE_CONFIG = {
    'app_name': 'cove_iati',
    'app_base_template': 'cove_iati/base.html',
    'app_verbose_name': 'IATI CoVE',
    'app_strapline': 'Convert, Validate, Explore IATI Data',
    'core_schema': {'activity': 'iati-activities-schema.xsd', 'organisation': 'iati-organisations-schema.xsd'},
    'supplementary_schema': {'common': 'iati-common.xsd', 'xml': 'xml.xsd'},
    'schema_host': 'https://raw.githubusercontent.com/IATI/IATI-Schemas/',
    'schema_version': '2.03',
    'schema_directory': 'iati_schemas',
    'root_list_path': 'iati-activity',
    'root_id': None,
    'id_name': 'iati-identifier',
    'convert_titles': False,
    'input_methods': ['upload', 'url', 'text'],
    'support_email': None,
    'flatten_tool': {
        'disable_local_refs': True,
        'remove_empty_schema_columns': True,
        'xml_comment': 'Data generated by IATI CoVE. Built by Open Data Services Co-operative: http://iati.cove.opendataservices.coop/',
    },
    'hashcomments': True
}


# https://github.com/OpenDataServices/cove/issues/1098
FILE_UPLOAD_PERMISSIONS = 0o644


# Note on deploying new versions of this app the cache directory should be cleared
# as new versions of requests & requests_cache libraries may use different versions
# https://requests-cache.readthedocs.io/en/latest/user_guide/troubleshooting.html#potential-issues
REQUESTS_SESSION_WITH_CACHING = CachedSession(
    'iati_cove_cache',
    backend=FileCache(
        cache_name=env('REQUESTS_CACHE_DIR')
    ),
    expire_after=timedelta(days=1),  # Expire responses after one day
    allowable_methods=['GET'],       # All our requests we want to cache are GET requests
    allowable_codes=[200, 400],      # Cache 400 responses as a solemn reminder of your failures
    stale_if_error=True,             # In case of request errors, use stale cache data if possible
)

NON_EMBEDDED_CODELISTS_URLS = {
    'ActivityScope': 'https://codelists.codeforiati.org/api/xml/ActivityScope.xml',
    'AidType-category': 'https://codelists.codeforiati.org/api/xml/AidType-category.xml',
    'AidTypeVocabulary': 'https://codelists.codeforiati.org/api/xml/AidTypeVocabulary.xml',
    'AidType': 'https://codelists.codeforiati.org/api/xml/AidType.xml',
    'BudgetIdentifierSector-category': 'https://codelists.codeforiati.org/api/xml/BudgetIdentifierSector-category.xml',
    'BudgetIdentifierSector': 'https://codelists.codeforiati.org/api/xml/BudgetIdentifierSector.xml',
    'BudgetIdentifierVocabulary': 'https://codelists.codeforiati.org/api/xml/BudgetIdentifierVocabulary.xml',
    'BudgetIdentifier': 'https://codelists.codeforiati.org/api/xml/BudgetIdentifier.xml',
    'BudgetNotProvided': 'https://codelists.codeforiati.org/api/xml/BudgetNotProvided.xml',
    'CollaborationType': 'https://codelists.codeforiati.org/api/xml/CollaborationType.xml',
    'ConditionType': 'https://codelists.codeforiati.org/api/xml/ConditionType.xml',
    'ContactType': 'https://codelists.codeforiati.org/api/xml/ContactType.xml',
    'Country': 'https://codelists.codeforiati.org/api/xml/Country.xml',
    'CRSAddOtherFlags': 'https://codelists.codeforiati.org/api/xml/CRSAddOtherFlags.xml',
    'CRSChannelCode': 'https://codelists.codeforiati.org/api/xml/CRSChannelCode.xml',
    'Currency': 'https://codelists.codeforiati.org/api/xml/Currency.xml',
    'DescriptionType': 'https://codelists.codeforiati.org/api/xml/DescriptionType.xml',
    'DisbursementChannel': 'https://codelists.codeforiati.org/api/xml/DisbursementChannel.xml',
    'DocumentCategory-category': 'https://codelists.codeforiati.org/api/xml/DocumentCategory-category.xml',
    'EarmarkingCategory': 'https://codelists.codeforiati.org/api/xml/EarmarkingCategory.xml',
    'FileFormat': 'https://codelists.codeforiati.org/api/xml/FileFormat.xml',
    'FinanceType-category': 'https://codelists.codeforiati.org/api/xml/FinanceType-category.xml',
    'FinanceType': 'https://codelists.codeforiati.org/api/xml/FinanceType.xml',
    'FlowType': 'https://codelists.codeforiati.org/api/xml/FlowType.xml',
    'GeographicalPrecision': 'https://codelists.codeforiati.org/api/xml/GeographicalPrecision.xml',
    'GeographicExactness': 'https://codelists.codeforiati.org/api/xml/GeographicExactness.xml',
    'GeographicLocationClass': 'https://codelists.codeforiati.org/api/xml/GeographicLocationClass.xml',
    'GeographicLocationReach': 'https://codelists.codeforiati.org/api/xml/GeographicLocationReach.xml',
    'GeographicVocabulary': 'https://codelists.codeforiati.org/api/xml/GeographicVocabulary.xml',
    'HumanitarianScopeType': 'https://codelists.codeforiati.org/api/xml/HumanitarianScopeType.xml',
    'HumanitarianScopeVocabulary': 'https://codelists.codeforiati.org/api/xml/HumanitarianScopeVocabulary.xml',
    'IATIOrganisationIdentifier': 'https://codelists.codeforiati.org/api/xml/IATIOrganisationIdentifier.xml',
    'IndicatorMeasure': 'https://codelists.codeforiati.org/api/xml/IndicatorMeasure.xml',
    'IndicatorVocabulary': 'https://codelists.codeforiati.org/api/xml/IndicatorVocabulary.xml',
    'Language': 'https://codelists.codeforiati.org/api/xml/Language.xml',
    'LoanRepaymentPeriod': 'https://codelists.codeforiati.org/api/xml/LoanRepaymentPeriod.xml',
    'LoanRepaymentType': 'https://codelists.codeforiati.org/api/xml/LoanRepaymentType.xml',
    'LocationType-category': 'https://codelists.codeforiati.org/api/xml/LocationType-category.xml',
    'LocationType': 'https://codelists.codeforiati.org/api/xml/LocationType.xml',
    'OrganisationIdentifier': 'https://codelists.codeforiati.org/api/xml/OrganisationIdentifier.xml',
    'OrganisationRegistrationAgency': 'https://codelists.codeforiati.org/api/xml/OrganisationRegistrationAgency.xml',
    'OrganisationType': 'https://codelists.codeforiati.org/api/xml/OrganisationType.xml',
    'OtherIdentifierType': 'https://codelists.codeforiati.org/api/xml/OtherIdentifierType.xml',
    'PolicyMarkerVocabulary': 'https://codelists.codeforiati.org/api/xml/PolicyMarkerVocabulary.xml',
    'PolicyMarker': 'https://codelists.codeforiati.org/api/xml/PolicyMarker.xml',
    'PolicySignificance': 'https://codelists.codeforiati.org/api/xml/PolicySignificance.xml',
    'PublisherType': 'https://codelists.codeforiati.org/api/xml/PublisherType.xml',
    'RegionVocabulary': 'https://codelists.codeforiati.org/api/xml/RegionVocabulary.xml',
    'Region': 'https://codelists.codeforiati.org/api/xml/Region.xml',
    'ResultType': 'https://codelists.codeforiati.org/api/xml/ResultType.xml',
    'ResultVocabulary': 'https://codelists.codeforiati.org/api/xml/ResultVocabulary.xml',
    'SectorCategory': 'https://codelists.codeforiati.org/api/xml/SectorCategory.xml',
    'SectorVocabulary': 'https://codelists.codeforiati.org/api/xml/SectorVocabulary.xml',
    'Sector': 'https://codelists.codeforiati.org/api/xml/Sector.xml',
    'TagVocabulary': 'https://codelists.codeforiati.org/api/xml/TagVocabulary.xml',
    'TiedStatus': 'https://codelists.codeforiati.org/api/xml/TiedStatus.xml',
    'VerificationStatus': 'https://codelists.codeforiati.org/api/xml/VerificationStatus.xml',
    'Version': 'https://codelists.codeforiati.org/api/xml/Version.xml',
}
